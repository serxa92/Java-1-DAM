ðŸ“š JDBC (Java Database Connectivity)

ðŸ§© Â¿QuÃ© es JDBC?

JDBC (Java Database Connectivity) es una puerta de enlace entre Java y una base de datos.
Es como una traductora que:

- Recibe consultas SQL desde Java
- Las manda a la base de datos
- Recoge los resultados
- Te los devuelve en objetos Java

ðŸ”§ Â¿QuÃ© necesitas para usar JDBC?

- Una base de datos (como MySQL o SQLite)
- Un driver JDBC (un archivo .jar que actÃºa como traductor)
- CÃ³digo Java para:
  - Conectarte
  - Lanzar consultas SQL
  - Leer y usar los resultados

ðŸ§± Estructura tÃ­pica de un programa con JDBC

. Conectarse:

Connection con = DriverManager.getConnection(url, usuario, contraseÃ±a);

. Crear consulta:

Statement stmt = con.createStatement();

. Ejecutar consulta:

ResultSet rs = stmt.executeQuery("SELECT * FROM alumnos");

. Recorrer resultados:

while (rs.next()) {
    System.out.println(rs.getString("nombre"));
}
. Cerrar recursos (opcional si usas try-with-resources, recomendado):

rs.close();
stmt.close();
con.close();

ðŸŽ¯ Â¿QuÃ© puedes hacer con JDBC?

|--------------------------------------|-----------------------------|
|             AcciÃ³n	               |              MÃ©todo         |
|--------------------------------------|-----------------------------|
|      Leer datos	                   |           executeQuery()    |
|--------------------------------------|-----------------------------|
|      Insertar datos                  |           executeUpdate()   |
|--------------------------------------|-----------------------------|
|      Borrar / actualizar	           |           executeUpdate()   |
|--------------------------------------|-----------------------------|
|      Preparar consultas seguras	   |           PreparedStatement |
|--------------------------------------|-----------------------------|

ðŸ§  JDBC vs SQL

JDBC no sustituye SQL, sino que lo envÃ­a a la base de datos.

Escribes SELECT, INSERT, DELETE como siempre, pero desde Java.

ðŸ”Œ Â¿QuÃ© bases de datos puedes usar?

- Motor => Ideal para...	URL tÃ­pica
- MySQL => Proyectos grandes, servidor web	jdbc:mysql://localhost:3306/mi_bd
- SQLite => Proyectos pequeÃ±os, sin instalar nada	jdbc:sqlite:alumnos.db

ðŸ§ª Ejercicio 11 â€“ Leer una tabla de alumnos desde SQLite con JDBC

ðŸŽ¯ Objetivo:

- Conectar Java a una base de datos SQLite
- Leer una tabla alumnos
- Mostrar los datos por consola desde Java

ðŸ“‹ Enunciado:

Prepara la base de datos:

- Crea un archivo llamado alumnos.db
- Dentro debe haber una tabla llamada alumnos con al menos los campos:
    -id (INTEGER PRIMARY KEY)
    -nombre (TEXT)
    -edad (INTEGER)

Puedes usar DB Browser for SQLite (recomendado) o crearlo con cÃ³digo SQL:

CREATE TABLE alumnos (
    id INTEGER PRIMARY KEY,
    nombre TEXT,
    edad INTEGER
);

INSERT INTO alumnos (nombre, edad) VALUES ('Ana', 20), ('Luis', 22), ('MarÃ­a', 19);


En Java, crea una clase ConexionSQLite que:

- Se conecte a alumnos.db (debe estar en la raÃ­z del proyecto)
- Lance una consulta SQL: SELECT * FROM alumnos
- Recorra los resultados y muestre por consola:
    - ID: 1 - Nombre: Ana - Edad: 20
    - ID: 2 - Nombre: Luis - Edad: 22
    - ...

ðŸ§© BONUS (opcional):

- Crear una clase Alumno para guardar los resultados como objetos
- Mostrar la lista con un bucle for-each